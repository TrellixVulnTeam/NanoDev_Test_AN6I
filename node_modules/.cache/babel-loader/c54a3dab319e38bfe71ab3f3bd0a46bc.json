{"ast":null,"code":"var _jsxFileName = \"/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoList.tsx\";\nimport React from 'react';\nimport TodoItem from './TodoItem';\nimport '../component/style.scss';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  let todosDone = todos.filter(t => t.isDone === true);\n\n  const handleClear = () => {\n    todosDone.m;\n    setTodos(todos.filter(todo => !todo.isDone));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${todosDone.length}/${todos.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear\",\n        type: \"submit\",\n        onClick: () => handleClear(),\n        style: {\n          background: 'orange'\n        },\n        children: [/*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \"clear done todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), todos && todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        todos: todos,\n        setTodos: setTodos\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoList.tsx"],"names":["React","TodoItem","AiOutlineClose","TodoList","todos","setTodos","todosDone","filter","t","isDone","handleClear","m","todo","length","background","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,yBAAP;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAOA,MAAMC,QAAyB,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACvD,MAAIC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,IAA/B,CAAhB;;AACA,QAAMC,WAAW,GAAG,MAAM;AACtBJ,IAAAA,SAAS,CAACK,CAAV;AACAN,IAAAA,QAAQ,CAACD,KAAK,CAACG,MAAN,CAAaK,IAAI,IAAI,CAACA,IAAI,CAACH,MAA3B,CAAD,CAAR;AACH,GAHD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA,kBAAQ,GAAEH,SAAS,CAACO,MAAO,IAAGT,KAAK,CAACS,MAAO;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,MAAMH,WAAW,EAAlE;AAAuE,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAC;AAAZ,SAA9E;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGV,KAAK,IACJA,KAAK,CAACW,GAAN,CAAWH,IAAD,IAAU;AAClB,0BACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,KAAK,EAAER,KAHT;AAIE,QAAA,QAAQ,EAAEC;AAJZ,SACOO,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATD,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;KAAMb,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Todo } from '../model/todoModel';\nimport TodoItem from './TodoItem';\nimport '../component/style.scss'\nimport { AiOutlineClose } from 'react-icons/ai';\n\ninterface Props {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst TodoList: React.FC<Props> = ({ todos, setTodos }) => {\n    let todosDone = todos.filter(t => t.isDone === true);\n    const handleClear = () => {\n        todosDone.m\n        setTodos(todos.filter(todo => !todo.isDone))\n    }\n  return (\n    <div className=\"todos\">\n      <div className='title'>\n        <span>{`${todosDone.length}/${todos.length}`}</span>\n        <button className=\"clear\" type=\"submit\" onClick={() => handleClear()}  style={{background:'orange'}}>\n          <AiOutlineClose/>clear done todo\n        </button>\n      </div>\n      {todos &&\n        todos.map((todo) => {\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              todos={todos}\n              setTodos={setTodos}\n            />\n          );\n        })}\n    </div>\n  );\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}