{"ast":null,"code":"var _jsxFileName = \"/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineClose, AiOutlineCheck } from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodos,\n    todos\n  } = _ref;\n\n  const handleDelete = id => {\n    axios.delete(`${API_URL}/${id}`).then(res => {\n      console.log(\"delete successful\");\n    });\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleDone = id => {\n    axios.put(`http://localhost:3001/todos/${id}`, {\n      id,\n      name: todo.name,\n      isDone: true\n    }).then(res => {\n      console.log(\"delete successful\");\n    });\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      isDone: true\n    } : todo));\n  };\n\n  const [isShown, setIsShown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blocName\",\n      onMouseOver: () => setIsShown(true),\n      onMouseLeave: () => setIsShown(false),\n      onClick: () => handleDone(todo.id),\n      children: todo.isDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AiOutlineCheck, {\n          className: \"doneIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"s\", {\n          children: todo.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isShown ? \"iconShow\" : \"iconHide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon\",\n      children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n        onClick: () => handleDelete(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodoItem, \"AfL4AMulNN2iutG1qDR77gnp7oc=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoItem.tsx"],"names":["React","useState","AiOutlineClose","AiOutlineCheck","axios","API_URL","TodoItem","todo","setTodos","todos","handleDelete","id","delete","then","res","console","log","filter","handleDone","put","name","isDone","map","isShown","setIsShown","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,gBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;;AAQA,MAAMC,QAAyB,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;;AAC/D,QAAMC,YAAY,GAAIC,EAAD,IAAgB;AACnCP,IAAAA,KAAK,CAACQ,MAAN,CAAsB,GAAEP,OAAQ,IAAGM,EAAG,EAAtC,EAAyCE,IAAzC,CAA+CC,GAAD,IAAS;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD;AAGAR,IAAAA,QAAQ,CAACC,KAAK,CAACQ,MAAN,CAAcV,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GALD;;AAOA,QAAMO,UAAU,GAAIP,EAAD,IAAgB;AACjCP,IAAAA,KAAK,CACFe,GADH,CACgB,+BAA8BR,EAAG,EADjD,EACoD;AAChDA,MAAAA,EADgD;AAEhDS,MAAAA,IAAI,EAAEb,IAAI,CAACa,IAFqC;AAGhDC,MAAAA,MAAM,EAAE;AAHwC,KADpD,EAMGR,IANH,CAMSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KARH;AASAR,IAAAA,QAAQ,CACNC,KAAK,CAACa,GAAN,CAAWf,IAAD,IACRA,IAAI,CAACI,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGJ,IAAL;AAAWc,MAAAA,MAAM,EAAE;AAAnB,KAAjB,GAA6Cd,IAD/C,CADM,CAAR;AAKD,GAfD;;AAiBA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,WAAW,EAAE,MAAMuB,UAAU,CAAC,IAAD,CAF/B;AAGE,MAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAHhC;AAIE,MAAA,OAAO,EAAE,MAAMN,UAAU,CAACX,IAAI,CAACI,EAAN,CAJ3B;AAAA,gBAMKJ,IAAI,CAACc,MAAL,gBACC;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAId,IAAI,CAACa,IAAL,CAAUK,WAAV;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,gBAMG;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEF,OAAO,GAAG,UAAH,GAAgB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOhB,IAAI,CAACa,IAAL,CAAUK,WAAV;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,MAAMf,YAAY,CAACH,IAAI,CAACI,EAAN;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BH,CArDD;;GAAML,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Todo } from \"../model/todoModel\";\nimport { AiOutlineClose, AiOutlineCheck } from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\n\ninterface Props {\n  todo: Todo;\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst TodoItem: React.FC<Props> = ({ todo, setTodos, todos }) => {\n  const handleDelete = (id: number) => {\n    axios.delete<Todo[]>(`${API_URL}/${id}`).then((res) => {\n      console.log(\"delete successful\");\n    });\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleDone = (id: Number) => {\n    axios\n      .put<Todo[]>(`http://localhost:3001/todos/${id}`, {\n        id,\n        name: todo.name,\n        isDone: true,\n      })\n      .then((res) => {\n        console.log(\"delete successful\");\n      });\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isDone: true } : todo\n      )\n    );\n  };\n\n  const [isShown, setIsShown] = useState(false);\n\n    return (\n      <div className=\"todoItem\">\n        <div\n          className=\"blocName\"\n          onMouseOver={() => setIsShown(true)}\n          onMouseLeave={() => setIsShown(false)}\n          onClick={() => handleDone(todo.id)}\n        >\n            {todo.isDone ? (\n              <>\n                <AiOutlineCheck className=\"doneIcon\" />\n                <s>{todo.name.toUpperCase()}</s>\n              </>\n            ) : (\n                <>\n                  <div className={isShown ? \"iconShow\" : \"iconHide\"}></div>\n                  <span>{todo.name.toUpperCase()}</span>\n                </>\n            )}\n          \n        </div>\n        <span className=\"icon\">\n          <AiOutlineClose onClick={() => handleDelete(todo.id)} />\n        </span>\n      </div>\n    );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}