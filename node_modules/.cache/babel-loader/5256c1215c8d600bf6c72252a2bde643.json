{"ast":null,"code":"var _jsxFileName = \"/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoItem.tsx\";\nimport React from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  let {\n    todo,\n    setTodos,\n    todos\n  } = _ref;\n\n  const handleDelete = id => {\n    axios.get(\"http://localhost:3001/todos\").then(res => {\n      console.log(res.data);\n      if (res.data) setTodos(res.data);\n    });\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleDone = id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      isDone: !todo.isDone\n    } : todo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoItem\",\n    children: [todo.isDone ? /*#__PURE__*/_jsxDEV(\"s\", {\n      children: todo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => handleDone(todo.id),\n      children: todo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon\",\n      children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {\n        onClick: () => handleDelete(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/vanel/Desktop/NanoDev/nanodev-test/src/component/TodoItem.tsx"],"names":["React","AiOutlineClose","TodoItem","todo","setTodos","todos","handleDelete","id","axios","get","then","res","console","log","data","filter","handleDone","map","isDone","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAmCC,cAAnC,QAAyD,gBAAzD;;;AAQA,MAAMC,QAAyB,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAA8B;;AAE7D,QAAMC,YAAY,GAAIC,EAAD,IAAgB;AACnCC,IAAAA,KAAK,CAACC,GAAN,CAAkB,6BAAlB,EAAiDC,IAAjD,CAAuDC,GAAD,IAAS;AAC7DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,UAAIH,GAAG,CAACG,IAAR,EAAcV,QAAQ,CAACO,GAAG,CAACG,IAAL,CAAR;AACf,KAHD;AAIFV,IAAAA,QAAQ,CAACC,KAAK,CAACU,MAAN,CAAcZ,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GANC;;AAQF,QAAMS,UAAU,GAAIT,EAAD,IAAgB;AACjCH,IAAAA,QAAQ,CACNC,KAAK,CAACY,GAAN,CAAWd,IAAD,IACRA,IAAI,CAACI,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGJ,IAAL;AAAWe,MAAAA,MAAM,EAAE,CAACf,IAAI,CAACe;AAAzB,KAAjB,GAAqDf,IADvD,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACGA,IAAI,CAACe,MAAL,gBACC;AAAA,gBAAIf,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAM,MAAA,OAAO,EAAE,MAAMH,UAAU,CAACb,IAAI,CAACI,EAAN,CAA/B;AAAA,gBAA2CJ,IAAI,CAACgB;AAAhD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,MAAMb,YAAY,CAACH,IAAI,CAACI,EAAN;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BD;;KAAML,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Todo } from \"../model/todoModel\";\nimport { AiFillEdit, AiFillDelete, AiOutlineClose } from \"react-icons/ai\";\n\ninterface Props {\n  todo: Todo;\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst TodoItem: React.FC<Props> = ({ todo, setTodos, todos }) => {\n\n    const handleDelete = (id: number) => {\n      axios.get<Todo[]>(\"http://localhost:3001/todos\").then((res) => {\n        console.log(res.data);\n        if (res.data) setTodos(res.data);\n      });\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n    \n  const handleDone = (id: Number) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\n      )\n    );\n  };\n\n  return (\n    <div className=\"todoItem\">\n      {todo.isDone ? (\n        <s>{todo.name}</s>\n      ) : (\n        <span onClick={() => handleDone(todo.id)}>{todo.name}</span>\n      )}\n      <span className=\"icon\">\n        <AiOutlineClose onClick={() => handleDelete(todo.id)} />\n      </span>\n    </div>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}