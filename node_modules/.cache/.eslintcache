[{"/Users/vanel/Desktop/NanoDev_Test/src/index.tsx":"1","/Users/vanel/Desktop/NanoDev_Test/src/reportWebVitals.ts":"2","/Users/vanel/Desktop/NanoDev_Test/src/App.tsx":"3","/Users/vanel/Desktop/NanoDev_Test/src/config.tsx":"4","/Users/vanel/Desktop/NanoDev_Test/src/component/InputField.tsx":"5","/Users/vanel/Desktop/NanoDev_Test/src/component/TodoList.tsx":"6","/Users/vanel/Desktop/NanoDev_Test/src/component/TodoItem.tsx":"7"},{"size":288,"mtime":1646787902984,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1646787608588,"results":"10","hashOfConfig":"9"},{"size":1059,"mtime":1646905148190,"results":"11","hashOfConfig":"9"},{"size":53,"mtime":1646839110249,"results":"12","hashOfConfig":"9"},{"size":930,"mtime":1646831959488,"results":"13","hashOfConfig":"9"},{"size":1392,"mtime":1646839165306,"results":"14","hashOfConfig":"9"},{"size":1809,"mtime":1646839505517,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2jxu1t",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vanel/Desktop/NanoDev_Test/src/index.tsx",[],[],"/Users/vanel/Desktop/NanoDev_Test/src/reportWebVitals.ts",[],[],"/Users/vanel/Desktop/NanoDev_Test/src/App.tsx",[],[],"/Users/vanel/Desktop/NanoDev_Test/src/config.tsx",[],[],"/Users/vanel/Desktop/NanoDev_Test/src/component/InputField.tsx",[],[],"/Users/vanel/Desktop/NanoDev_Test/src/component/TodoList.tsx",["38"],[],"import React from 'react'\nimport { Todo } from '../model/todoModel';\nimport TodoItem from './TodoItem';\nimport '../component/style.scss'\nimport { AiOutlineClose } from 'react-icons/ai';\nimport axios from 'axios'\nimport { API_URL } from '../config';\n\ninterface Props {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst TodoList: React.FC<Props> = ({ todos, setTodos }) => {\n    let todosDone = todos.filter(t => t.isDone === true);\n    const handleClear = () => {\n        todosDone.map((todo) => {\n            axios\n                .delete<Todo[]>(`${API_URL}/${todo.id}`)\n                .then((res) => {\n                    console.log(\"Delette successful\")\n                })\n        }\n        );\n        setTodos(todos.filter(todo => !todo.isDone))\n    }\n  return (\n    <div className=\"todos\">\n      <div className='title'>\n        <span>{`${todosDone.length}/${todos.length}`}</span>\n        <button className=\"clear\" type=\"submit\" onClick={() => handleClear()}  style={{background:'orange'}}>\n          <AiOutlineClose/>Clear done todos\n        </button>\n      </div>\n      {todos &&\n        todos.map((todo) => {\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              todos={todos}\n              setTodos={setTodos}\n            />\n          );\n        })}\n    </div>\n  );\n}\n\nexport default TodoList","/Users/vanel/Desktop/NanoDev_Test/src/component/TodoItem.tsx",[],[],{"ruleId":"39","severity":1,"message":"40","line":17,"column":30,"nodeType":"41","messageId":"42","endLine":17,"endColumn":32},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]